# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nvGr283HinU2o3JzBJqIfUCxaCNrPlrm
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from babel.numbers import format_currency
import gzip
import io
import requests

sns.set(style='darkgrid')

# Helper Functions
def create_monthly_sales_df(df):
    monthly_sales = df.groupby(['order_purchase_year', 'order_purchase_month'])['price'].sum().reset_index()
    monthly_sales['month_year'] = monthly_sales['order_purchase_year'].astype(str) + '-' + monthly_sales['order_purchase_month'].astype(str)
    return monthly_sales

def create_product_sales_df(df):
    product_sales = df['product_category_name_english'].value_counts().reset_index()
    product_sales.columns = ['product_category_name_english', 'order_item_id']
    return product_sales

def create_rfm_df(df):
    df['days_since_last_purchase'] = (df['order_purchase_timestamp'].max() - df['order_purchase_timestamp']).dt.days
    recency = df.groupby('customer_id')['days_since_last_purchase'].min().reset_index()
    frequency = df.groupby('customer_id')['order_id'].nunique().reset_index()
    monetary = df.groupby('customer_id')['order_value'].sum().reset_index()
    rfm = recency.merge(frequency, on='customer_id').merge(monetary, on='customer_id')
    rfm.columns = ['customer_id', 'recency', 'frequency', 'monetary']
    return rfm

def create_top_sellers_df(df):
    top_sellers = df.groupby('seller_id')['order_value'].sum().sort_values(ascending=False).reset_index().head(10)
    return top_sellers

# Load Data
# URL mentah GitHub untuk file .gz
url = 'https://raw.githubusercontent.com/bino1kromo/Project-data-analysis-meysi/246a8f513863306690d02f6d538e6449ee2a9c1e/Dashboard/sales_data.gz'

# Membaca data .gz langsung dari URL
response = requests.get(url)
with gzip.open(io.BytesIO(response.content), 'rt') as file:
    sales_data = pd.read_csv(file)

# Memastikan kolom waktu dalam format datetime
sales_data['order_purchase_timestamp'] = pd.to_datetime(sales_data['order_purchase_timestamp'])
sales_data['order_estimated_delivery_date'] = pd.to_datetime(sales_data['order_estimated_delivery_date'])
sales_data['order_delivered_customer_date'] = pd.to_datetime(sales_data['order_delivered_customer_date'])

# Adding Month and Year Columns
sales_data['order_purchase_month'] = sales_data['order_purchase_timestamp'].dt.month
sales_data['order_purchase_year'] = sales_data['order_purchase_timestamp'].dt.year

# Sidebar Filters
min_date = sales_data['order_purchase_timestamp'].min()
max_date = sales_data['order_purchase_timestamp'].max()

with st.sidebar:
    st.image("https://github.com/dicodingacademy/assets/raw/main/logo.png")
    start_date, end_date = st.date_input("Rentang Waktu", min_value=min_date, max_value=max_date, value=[min_date, max_date])

filtered_data = sales_data[(sales_data['order_purchase_timestamp'] >= str(start_date)) & (sales_data['order_purchase_timestamp'] <= str(end_date))]

# Main Dashboard
st.title("Sales Dashboard")

# Monthly Sales
monthly_sales_df = create_monthly_sales_df(filtered_data)
st.subheader("Performa Revenue Bulanan")
fig, ax = plt.subplots(figsize=(14, 7))
sns.lineplot(data=monthly_sales_df, x='month_year', y='price', ax=ax, color='#008000')
plt.xticks(rotation=45)
st.pyplot(fig)

# Top Product Sales
product_sales_df = create_product_sales_df(filtered_data)
st.subheader("Top 10 Kategori Produk Terlaris")
fig, ax = plt.subplots(figsize=(14, 7))
sns.barplot(data=product_sales_df.head(10), x='order_item_id', y='product_category_name_english', palette='Greens_r', ax=ax)
st.pyplot(fig)

# RFM Analysis
rfm_df = create_rfm_df(filtered_data)

# Visualize Recency
st.subheader("Distribusi Recency")
fig, ax = plt.subplots(figsize=(12, 6))
sns.histplot(rfm_df['recency'], bins=20, kde=True, color='#008000', ax=ax)
st.pyplot(fig)

# Visualize Frequency
st.subheader("Distribusi Frequency")
fig, ax = plt.subplots(figsize=(12, 6))
sns.histplot(rfm_df['frequency'], bins=20, kde=True, color='#008000', ax=ax)
st.pyplot(fig)

# Visualize Monetary
st.subheader("Distribusi Monetary")
fig, ax = plt.subplots(figsize=(12, 6))
sns.histplot(rfm_df['monetary'], bins=20, kde=True, color='#008000', ax=ax)
st.pyplot(fig)

# Top Sellers
top_sellers_df = create_top_sellers_df(filtered_data)
st.subheader("Top 10 Penjual Berdasarkan Penjualan")
fig, ax = plt.subplots(figsize=(12, 6))
sns.barplot(x=top_sellers_df['seller_id'], y=top_sellers_df['order_value'], palette='Greens_r', ax=ax)
st.pyplot(fig)